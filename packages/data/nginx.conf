server {
  listen 80;
  server_name _;
  
  # Health check endpoint
  location = /healthz {
    return 200 'ok';
    add_header Content-Type text/plain;
    access_log off;
  }

  root /usr/share/nginx/html;
  
  # Enhanced MIME type definitions
  include /etc/nginx/mime.types;

  # Global security headers applied to all responses
  add_header Content-Security-Policy "default-src 'none'; connect-src 'self' https:; img-src 'self' data:; script-src 'none'; style-src 'none'; object-src 'none'; base-uri 'self';" always;
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
  add_header X-Content-Type-Options "nosniff" always;
  add_header Referrer-Policy "strict-origin-when-cross-origin" always;
  add_header X-Frame-Options "DENY" always;
  add_header X-XSS-Protection "1; mode=block" always;

  # CORS preflight handling for all API endpoints
  location ~ ^/(revocations\.json|manifest|samples) {
    if ($request_method = 'OPTIONS') {
      add_header Access-Control-Allow-Origin '*' always;
      add_header Access-Control-Allow-Methods 'GET, HEAD, OPTIONS' always;
      add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
      add_header Access-Control-Max-Age 1728000 always;
      add_header Content-Type 'text/plain; charset=utf-8' always;
      add_header Content-Length 0 always;
      return 204;
    }
  }

  # Specific handling for revocations.json with enhanced CORS and caching
  location = /revocations.json {
    add_header Content-Type "application/json; charset=utf-8" always;
    add_header Access-Control-Allow-Origin '*' always;
    add_header Access-Control-Expose-Headers 'Content-Length,Content-Range,ETag,Last-Modified' always;
    add_header Cache-Control "public, max-age=300, must-revalidate" always;
    add_header ETag '"revocations-$date_gmt"' always;
    
    # Additional security for revocations endpoint
    add_header X-Content-Type-Options "nosniff" always;
    
    try_files $uri =404;
  }

  # Specific handling for revocations.sig
  location = /revocations.sig {
    add_header Content-Type "application/octet-stream" always;
    add_header Access-Control-Allow-Origin '*' always;
    add_header Cache-Control "public, max-age=300, must-revalidate" always;
    try_files $uri =404;
  }

  # Immutable manifest files with enhanced headers
  location ^~ /manifest/ {
    add_header Content-Type "application/json; charset=utf-8" always;
    add_header Access-Control-Allow-Origin '*' always;
    add_header Access-Control-Expose-Headers 'Content-Length,Content-Range,ETag,Last-Modified' always;
    add_header Cache-Control "public, max-age=31536000, immutable" always;
    add_header ETag '"$request_uri-$date_gmt"' always;
    
    # Manifest files should never change, so aggressive caching is safe
    expires 1y;
    
    try_files $uri =404;
  }

  # Sample files with appropriate caching and content type detection
  location ^~ /samples/ {
    add_header Access-Control-Allow-Origin '*' always;
    add_header Access-Control-Expose-Headers 'Content-Length,Content-Range,ETag,Last-Modified' always;
    add_header Cache-Control "public, max-age=86400" always;
    
    # Enhanced content type handling for samples
    location ~* \.json$ {
      add_header Content-Type "application/json; charset=utf-8" always;
      add_header Access-Control-Allow-Origin '*' always;
      add_header Cache-Control "public, max-age=86400" always;
      try_files $uri =404;
    }
    
    location ~* \.(png|jpg|jpeg)$ {
      add_header Content-Type "image/$1" always;
      add_header Access-Control-Allow-Origin '*' always;
      add_header Cache-Control "public, max-age=86400" always;
      try_files $uri =404;
    }
    
    location ~* \.pdf$ {
      add_header Content-Type "application/pdf" always;
      add_header Access-Control-Allow-Origin '*' always;
      add_header Cache-Control "public, max-age=86400" always;
      try_files $uri =404;
    }
    
    location ~* \.(txt|docx)$ {
      add_header Access-Control-Allow-Origin '*' always;
      add_header Cache-Control "public, max-age=86400" always;
      try_files $uri =404;
    }
    
    # Fallback for other sample files
    try_files $uri =404;
  }

  # Enhanced JSON handling for other JSON files
  location ~* \.json$ {
    add_header Content-Type "application/json; charset=utf-8" always;
    add_header Access-Control-Allow-Origin '*' always;
    add_header Cache-Control "public, max-age=300, must-revalidate" always;
    try_files $uri =404;
  }

  # Default static file handling with minimal caching
  location / {
    add_header Access-Control-Allow-Origin '*' always;
    add_header Cache-Control "public, max-age=3600" always;
    
    # Handle index.html specifically
    location = / {
      add_header Content-Type "text/html; charset=utf-8" always;
      add_header Cache-Control "public, max-age=300" always;
      try_files /index.html =404;
    }
    
    try_files $uri =404;
  }

  # Security: Deny access to hidden files and sensitive patterns
  location ~ /\. {
    deny all;
    access_log off;
    log_not_found off;
  }
  
  location ~ ~$ {
    deny all;
    access_log off;
    log_not_found off;
  }

  # Custom error pages with CORS headers
  error_page 404 /404.html;
  location = /404.html {
    add_header Access-Control-Allow-Origin '*' always;
    internal;
  }
}